
#import "TabSquareTableManagement.h"
#import "TabSquareAssignTable.h"
#import <QuartzCore/CALayer.h>
#import "ShareableData.h"
#import "TabSquareTableStatus.h"
#import "SalesReport.h"
#import "SBJSON.h"
#import "TabSquareMenuController.h"
#import "TabSquareHomeController.h"
#import "TakeWayEditOrder.h"
#import "TabSquareDBFile.h"
#import "TabSquarePlaogramView.h"
#import "TabSquareCommonClass.h"


@implementation TabSquareTableManagement

@synthesize tableNoView,statusView,TotalTableNo,takeawayButton,takeawayAssignBtn, tableNumber,oldTableNumber, bgImage;

int switchMode = 0;

bool funcCalled = NO;


-(id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
        
    }
    return self;
}



-(void)getTotalNumberofTable
{
    //NSString *Key=@"kinara123";
    
    NSString *post =[NSString stringWithFormat:@"key=%@", [ShareableData appKey]];
    NSData *postData = [post dataUsingEncoding:NSUTF8StringEncoding allowLossyConversion:YES];
    
    NSString *postLength = [NSString stringWithFormat:@"%d", [postData length]];
    NSMutableURLRequest *request = [[NSMutableURLRequest alloc] init];
    
    NSString *url_string = [NSString stringWithFormat:@"%@/webs/get_tables", [ShareableData serverURL]];
    [request setURL:[NSURL URLWithString:url_string]];
    
    [request setHTTPMethod:@"POST"];
    [request setValue:postLength forHTTPHeaderField:@"Content-Length"];
    [request setValue:@"application/x-www-form-urlencoded" forHTTPHeaderField:@"Content-Type"];
    [request setValue:@"application/x-www-form-urlencoded charset=utf-8" forHTTPHeaderField:@"Content-Type"];
    [request setHTTPBody:postData];
    
    NSError *error;
    NSURLResponse *response;
    NSData *uData=[NSURLConnection sendSynchronousRequest:request returningResponse:&response error:&error];
    NSString *data=[[NSString alloc]initWithData:uData encoding:NSUTF8StringEncoding];
    //DLog(@"Data :%@",data);
    TotalTableNo = @"";
    TotalTableNo=@"30";//data;
      
}

-(void)getFreeTableNo
{
    //NSString *Key=@"kinara123";
    
    NSString *post =[NSString stringWithFormat:@"key=%@", [ShareableData appKey] ];
    NSData *postData = [post dataUsingEncoding:NSUTF8StringEncoding allowLossyConversion:YES];
    
    NSString *postLength = [NSString stringWithFormat:@"%d", [postData length]];
    NSMutableURLRequest *request = [[NSMutableURLRequest alloc] init];
    
    NSString *url_string = [NSString stringWithFormat:@"%@/webs/get_free_tables", [ShareableData serverURL]];
    [request setURL:[NSURL URLWithString:url_string]];
    
    [request setHTTPMethod:@"POST"];
    [request setValue:postLength forHTTPHeaderField:@"Content-Length"];
    [request setValue:@"application/x-www-form-urlencoded" forHTTPHeaderField:@"Content-Type"];
    [request setValue:@"application/x-www-form-urlencoded charset=utf-8" forHTTPHeaderField:@"Content-Type"];
    [request setHTTPBody:postData];
    
    NSError *error;
    NSURLResponse *response;
    NSData *uData=[NSURLConnection sendSynchronousRequest:request returningResponse:&response error:&error];
    NSString *data=[[NSString alloc]initWithData:uData encoding:NSUTF8StringEncoding];
    //DLog(@"Data :%@",data);
    SBJSON *parser = [[SBJSON alloc] init];
    NSMutableArray *resultFromPost = [parser objectWithString:data error:nil];
    [TotalFreeTables removeAllObjects];
    for(int i=0;i<[resultFromPost count];i++)
    {
        [TotalFreeTables addObject:[NSString stringWithFormat:@"%@",resultFromPost[i]]];
    }
}

-(void)getTableStatusView
{
   // [TableStatus removeAllObjects];
    for(int i=1,k=0;i<=[TotalTableNo intValue];++i,++k)
    {
        NSString *tableno=[NSString stringWithFormat:@"%d",i];
        if ([TableStatus count]<TotalTableNo.intValue){
        [TableStatus addObject:@"0"];
        }
        for(int j=0;j<[TotalFreeTables count];++j)
        {
            if([tableno isEqualToString:TotalFreeTables[j]])
            {
                TableStatus[k] = @"0";
                ((UILabel*)[self.view viewWithTag:(k+1000)]).backgroundColor=[UIColor whiteColor];
                break;
            }
            else {
               TableStatus[k] = @"1";
                ((UILabel*)[self.view viewWithTag:(k+1000)]).backgroundColor=[UIColor orangeColor];
            }
        }
    }
}


-(void)createViews{
    assignTableView = nil;
    tablestatusView = nil;
    homeView = nil;
    TableMgmt = nil;
  //  home = nil;
    SalesReport1 = nil;
   // taEdit = nil;
    assignTableView = [[TabSquareAssignTable alloc]initWithNibName:@"TabSquareAssignTable" bundle:[NSBundle mainBundle]];
    //TabSquareAssignTable *assignTableView;
    tablestatusView=[[TabSquareTableStatus alloc]initWithNibName:@"TabSquareTableStatus" bundle:[NSBundle mainBundle]];
    homeView=[[TabSquareHomeController alloc]initWithNibName:@"TabSquareHomeController" bundle:nil];
    TableMgmt=[[TabSquareMenuController alloc]initWithNibName:@"TabSquareMenuController" bundle:nil];
    SalesReport1=[[SalesReport alloc]initWithNibName:@"SalesReport" bundle:nil];
   // TakeWayEditOrder *taEdit;
    
}


/*-(void)createAssignTableView
{
    assignTableView=[[TabSquareAssignTable alloc]initWithNibName:@"TabSquareAssignTable" bundle:[NSBundle mainBundle]];
}*/

/*-(void)createTableStatusView
{
    tablestatusView=[[TabSquareTableStatus alloc]initWithNibName:@"TabSquareTableStatus" bundle:[NSBundle mainBundle]];
    
}*/

-(void)viewDidLoad
{
    
    [super viewDidLoad];

    
    TotalFreeTables=[[NSMutableArray alloc]init];
    TableStatus=[[NSMutableArray alloc]init];
    TATables=[[NSMutableArray alloc]init];
    [self showIndicator];
    statusView.layer.cornerRadius=12.0;
    tableData=[[NSMutableArray alloc]init];
    tableStatus=[[NSMutableArray alloc]init];
   // [self createAssignTableView];
   // [self createTableStatusView];
    //[self createViews];
    
  //  [self createHomeView];
    
    [ShareableData sharedInstance].isLogin = @"0";
    [ShareableData sharedInstance].Customer = @"0";
    [ShareableData sharedInstance].isFBLogin = @"0";
    [ShareableData sharedInstance].isTwitterLogin = @"0";
   // [objFacebookViewC logout];
    [ShareableData sharedInstance].ViewMode = 2;
    [self checkTakeaway];
    [self initTABtns];
    // Do any additional setup after loading the view from its nib.
    taskType=0;
    
}
-(void)viewDidAppear:(BOOL)animated{
    tt =[NSTimer scheduledTimerWithTimeInterval:5.0
                                         target:self
                                       selector:@selector(onTick)
                                       userInfo:nil
                                        repeats:YES];
    [ShareableData sharedInstance].isQuickOrder =@"0";
    //add alert box to ask if user would like to cancel
    [self createViews];
    NSArray *paths = NSSearchPathForDirectoriesInDomains(NSLibraryDirectory, NSUserDomainMask, YES);
    NSString *libraryDirectory = paths[0];
    NSString *location = [libraryDirectory stringByAppendingString:@"/orderarrays.plist"];
    
    //NSString *filePath = [[NSBundle mainBundle] pathForResource:@"orderarrays" ofType:@"plist"];
    // NSDictionary *dict = [[NSDictionary alloc] initWithContentsOfFile:filePath];
    NSArray *array = [[NSArray alloc] initWithContentsOfFile:location];
    
    if (array !=nil){
        
        DLog(@"Crash Loaded");
        [ShareableData sharedInstance].performUpdateCheck = @"1";
        [ShareableData sharedInstance].ViewMode = 2;
        [ShareableData sharedInstance].IsEditOrder =@"0";
        [ShareableData sharedInstance].isQuickOrder =@"0";
        NSArray *paths = NSSearchPathForDirectoriesInDomains(NSLibraryDirectory, NSUserDomainMask, YES);
        NSString *libraryDirectory = paths[0];
        NSString *location = [libraryDirectory stringByAppendingString:@"/orderarrays.plist"];
        
        //NSString *filePath = [[NSBundle mainBundle] pathForResource:@"orderarrays" ofType:@"plist"];
        // NSDictionary *dict = [[NSDictionary alloc] initWithContentsOfFile:filePath];
        NSArray *array = [[NSArray alloc] initWithContentsOfFile:location];
        // NSString *filePath2 = [[NSBundle mainBundle] pathForResource:@"orderstrings" ofType:@"plist"];
        // NSArray *paths = NSSearchPathForDirectoriesInDomains(NSLibraryDirectory, NSUserDomainMask, YES);
        // NSString *libraryDirectory = [paths objectAtIndex:0];
        NSString *location2 = [libraryDirectory stringByAppendingString:@"/orderstrings.plist"];
        // NSDictionary *dict = [[NSDictionary alloc] initWithContentsOfFile:filePath];
        NSArray *array2 = [[NSArray alloc] initWithContentsOfFile:location2];
        
        
        
        [ShareableData sharedInstance].assignedTable1 = [array2[1] copy];
        [ShareableData sharedInstance].assignedTable2 = [array2[2] copy];
        [ShareableData sharedInstance].assignedTable3 = [array2[3] copy];
        [ShareableData sharedInstance].assignedTable4 = [array2[4] copy];
        [ShareableData sharedInstance].OrderId = [array2[0] copy];
       // [self getSalesNumber:[ShareableData sharedInstance].assignedTable1];
        // [[ShareableData sharedInstance].OrderItemID release];
        [ShareableData sharedInstance].OrderItemID = [array[0] mutableCopy];
        // [[ShareableData sharedInstance].OrderItemName release];
        [ShareableData sharedInstance].OrderItemName =[array[1] mutableCopy];
        // [[ShareableData sharedInstance].OrderItemRate release];
        [ShareableData sharedInstance].OrderItemRate =[array[2] mutableCopy];
        // [[ShareableData sharedInstance].OrderCatId release];
        [ShareableData sharedInstance].OrderCatId =[array[3] mutableCopy];
        // [[ShareableData sharedInstance].IsOrderCustomization release];
        [ShareableData sharedInstance].IsOrderCustomization =[array[4] mutableCopy];
        // [[ShareableData sharedInstance].OrderCustomizationDetail release];
        [ShareableData sharedInstance].OrderCustomizationDetail =[array[5] mutableCopy];
        //  [[ShareableData sharedInstance].OrderSpecialRequest release];
        [ShareableData sharedInstance].OrderSpecialRequest =[array[6] mutableCopy];
        //  [[ShareableData sharedInstance].OrderItemQuantity release];
        [ShareableData sharedInstance].OrderItemQuantity =[array[7] mutableCopy];
        //   [[ShareableData sharedInstance].confirmOrder release];
        [ShareableData sharedInstance].confirmOrder =[array[8] mutableCopy];
        

        
        
        
        
        
        
        //[self AssignTAData];
      /*  if (homeView !=nil){
            [self createHomeView];
        }*/
        
        
        //[self dismissModalViewControllerAnimated:NO];
        //[self presentViewController:homeView animated:YES completion:Nil];
        [self.navigationController pushViewController:homeView animated:YES];
        
    }
}


-(void)viewWillAppear:(BOOL)animated{
    [[ShareableData sharedInstance].OrderItemID removeAllObjects];
    [[ShareableData sharedInstance].OrderItemName removeAllObjects];
    [[ShareableData sharedInstance].OrderItemQuantity removeAllObjects];
    [[ShareableData sharedInstance].OrderItemRate removeAllObjects];
    
    [[ShareableData sharedInstance].OrderSpecialRequest removeAllObjects];
    [[ShareableData sharedInstance].OrderCatId removeAllObjects];
    //[[ShareableData sharedInstance].OrderBeverageContainerId removeAllObjects];
    [[ShareableData sharedInstance].OrderCustomizationDetail removeAllObjects];
    [[ShareableData sharedInstance].confirmOrder removeAllObjects];
    [[ShareableData sharedInstance].IsOrderCustomization removeAllObjects];
    [self getTableStatusView];
    [self checkTakeaway];
    funcCalled = NO;

}

-(void)viewDidDisappear:(BOOL)animated{
    
    [tt invalidate];
    tt=nil;
  //  DLog(@"WOOOOOOOOOOOOOOOO");
  //  [self dismissViewControllerAnimated:NO completion:Nil];
    
}
-(void)checkTakeaway{
    NSMutableURLRequest *request = [[NSMutableURLRequest alloc] init];
    [request setURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@Ex/checkTK.php?key=%@", [ShareableData serverURL], [ShareableData appKey]]]];
    NSError *error;
    NSURLResponse *response;
    NSData *uData=[NSURLConnection sendSynchronousRequest:request returningResponse:&response error:&error];
    NSString *data=[[[NSString alloc]initWithData:uData encoding:NSUTF8StringEncoding]stringByTrimmingCharactersInSet:
                    [NSCharacterSet whitespaceAndNewlineCharacterSet]];
    
    [TATables removeAllObjects];
    [TATables addObjectsFromArray:[data componentsSeparatedByString:@","]];

    
   // return [data componentsSeparatedByString:@","];
    
}
-(IBAction)assignTK:(id)btn{
    
   // UIView *progressView = [[UIView alloc]initWithFrame:CGRectMake(0,187, self.view.frame.size.width, self.view.frame.size.height)];
  //  progressHud= [[MBProgressHUD alloc] initWithView:progressView];
   // [self.view addSubview:progressHud];
   // [self.view bringSubviewToFront:progressHud];
    //progressHud.dimBackground = YES;
   // progressHud.delegate = self;
    //progressHud.labelText = @"loading....";
    
   // [progressHud showWhileExecuting:@selector(myTask2:) onTarget:self withObject:btn animated:YES];
    [self myTask2:btn];
    
    
}
-(void)myTask2:(id)btn{
    
    [[ShareableData sharedInstance].OrderItemID removeAllObjects];
    [[ShareableData sharedInstance].OrderItemName removeAllObjects];
    [[ShareableData sharedInstance].OrderItemQuantity removeAllObjects];
    [[ShareableData sharedInstance].OrderItemRate removeAllObjects];
    
    [[ShareableData sharedInstance].OrderSpecialRequest removeAllObjects];
    [[ShareableData sharedInstance].OrderCatId removeAllObjects];
    //[[ShareableData sharedInstance].OrderBeverageContainerId removeAllObjects];
    [[ShareableData sharedInstance].OrderCustomizationDetail removeAllObjects];
    [[ShareableData sharedInstance].confirmOrder removeAllObjects];
    [[ShareableData sharedInstance].IsOrderCustomization removeAllObjects];
    int d = ((UIButton*)btn).tag + 1;
    [ShareableData sharedInstance].ViewMode = 2;
    [[ShareableData sharedInstance].IsEditOrder isEqualToString:@"0"];
    [ShareableData sharedInstance].assignedTable1=[NSString stringWithFormat:@"%d",d];
    [ShareableData sharedInstance].assignedTable2=@"-1";
    [ShareableData sharedInstance].assignedTable3=@"-1";
    [ShareableData sharedInstance].assignedTable4=@"-1";
    [self AssignTAData:d];
   /* if (homeView !=nil){
        [self createHomeView];
    }*/
    
    
    //[self dismissModalViewControllerAnimated:NO];
    //[self presentModalViewController:homeView animated:YES];
   // [self presentViewController:homeView animated:YES completion:Nil];
    [ShareableData sharedInstance].IsEditOrder=@"1";
    [ShareableData sharedInstance].isQuickOrder=@"1";
    [ShareableData sharedInstance].isFeedbackDone=@"0";
    [ShareableData sharedInstance].isConfermOrder=TRUE;
    if([[ShareableData sharedInstance].isConfromHomePage isEqualToString:@"1"])
    {
       // TabSquareMenuController *TableMgmt=[[TabSquareMenuController alloc]initWithNibName:@"TabSquareMenuController" bundle:nil];
        [self.navigationController pushViewController:TableMgmt animated:YES];
        
    }
    else
    {
        //[self dismissModalViewControllerAnimated:NO];
       // TabSquareHomeController *TableMgmt=[[TabSquareHomeController alloc]initWithNibName:@"TabSquareHomeController" bundle:nil];
        [self.navigationController pushViewController:homeView animated:YES];
    }

}
-(void)AssignTAData:(int)tbl
{
    
    NSString *post =[NSString stringWithFormat:@"table1=%d&table2=%@&table3=%@&table4=%@&ipad_id=%@&no_of_guests=%@&key=%@",tbl,@"",@"",@"",@"0",@"1", [ShareableData appKey]];
    
    NSData *postData = [post dataUsingEncoding:NSUTF8StringEncoding allowLossyConversion:YES];
    
    NSString *postLength = [NSString stringWithFormat:@"%d", [postData length]];
    
    NSMutableURLRequest *request = [[NSMutableURLRequest alloc] init];
    
    NSString *url_string = [NSString stringWithFormat:@"%@/webs/set_order", [ShareableData serverURL]];
    [request setURL:[NSURL URLWithString:url_string]];
    
    [request setHTTPMethod:@"POST"];
    [request setValue:postLength forHTTPHeaderField:@"Content-Length"];
    [request setValue:@"application/x-www-form-urlencoded" forHTTPHeaderField:@"Content-Type"];
    [request setValue:@"application/x-www-form-urlencoded charset=utf-8" forHTTPHeaderField:@"Content-Type"];
    [request setHTTPBody:postData];
    
    NSError *error;
    NSURLResponse *response;
    NSData *uData=[NSURLConnection sendSynchronousRequest:request returningResponse:&response error:&error];
    NSString *data=[[NSString alloc]initWithData:uData encoding:NSUTF8StringEncoding];
    [ShareableData sharedInstance].OrderId=data;
    //DLog(@"%@",data);
}

-(void)onTick{
    if (funcCalled == NO){
       funcCalled = YES;
    dispatch_async( dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
        [self getTotalNumberofTable];
         [self getFreeTableNo];
        [self getTableStatusView];
       // [TATables removeAllObjects];
        //[TATables addObjectsFromArray:[[self checkTakeaway] copy]];
        [self checkTakeaway];
        
        
        dispatch_async( dispatch_get_main_queue(), ^{
            [self checkTABtns];
            [tableNoView reloadData];
            funcCalled = NO;
        });
    });
    
    }
    
    //[self getTaxesList];
    
    //[tableStatusView reloadData];
   // [self.view setNeedsDisplay];
    
}

-(void)viewDidUnload
{
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
}

-(IBAction)tableDetailView:(id)sender
{
    UIButton *btn=(UIButton*)sender;
    int tag=btn.tag;
    tableNumber=[NSString stringWithFormat:@"%d",tag+1];
    taskType=1;
    
    if (tableNumber.intValue>1233){
        // UIView *progressView = [[UIView alloc]initWithFrame:CGRectMake(0,187, self.view.frame.size.width, self.view.frame.size.height)];
        //   progressHud= [[MBProgressHUD alloc] initWithView:progressView];
        // [self.view addSubview:progressHud];
        // [self.view bringSubviewToFront:progressHud];
        //progressHud.dimBackground = YES;
        //progressHud.delegate = self;
        //progressHud.labelText = @"loading....";
        
        // [progressHud showWhileExecuting:@selector(myTask) onTarget:self withObject:nil animated:YES];
        [self myTask];
        
    }else{
        
        [self showIndicator];
    }
}


-(BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    return UIInterfaceOrientationIsPortrait(interfaceOrientation);
}

-(void)initTABtns
{
    
   // CGRect frame=CGRectMake(0,10, 103,100);
    //int i=0;
  //  int totalRows = 0;
   // NSArray* tempArray = [[self checkTakeaway] copy];
    for(int i=0;i<5;i++)
    {
        UILabel* tableName = (UILabel*)[self.view viewWithTag:(2233+i)];
        UIButton* btnn = (UIButton*)[self.view viewWithTag:(1233+i)];
        
            if([TATables containsObject:[NSString stringWithFormat:@"%d",(1234+i)] ])
            {
                tableName.backgroundColor=[UIColor orangeColor];
                 [ btnn addTarget:self action:@selector(tableDetailView:) forControlEvents:UIControlEventTouchUpInside];
            }
            else
            {
                tableName.backgroundColor=[UIColor whiteColor];
                [ btnn addTarget:self action:@selector(assignTK:) forControlEvents:UIControlEventTouchUpInside];
            }
            tableName.layer.cornerRadius=10.0;
            tableName.text=[NSString stringWithFormat:@"TA%d",i+1];
            tableName.textAlignment=UITextAlignmentCenter;
            tableName.font=[UIFont boldSystemFontOfSize:25];
            //[cell.contentView addSubview:tableName];
           // [add addTarget:self action:@selector(tableDetailView:) forControlEvents:UIControlEventTouchUpInside];
           // [cell.contentView addSubview:add];
            tableName.contentMode=UIViewContentModeCenter;
            //i++;
        
        
    }
    
}

-(void)checkTABtns
{
    
    // CGRect frame=CGRectMake(0,10, 103,100);
    //int i=0;
    //  int totalRows = 0;
   // NSArray* tempArray = [[self checkTakeaway] copy];
    for(int i=0;i<5;i++)
    {
        UILabel* tableName = (UILabel*)[self.view viewWithTag:(2233+i)];
        
        if([TATables containsObject:[NSString stringWithFormat:@"%d",(1234+i)] ])
        {
            tableName.backgroundColor=[UIColor orangeColor];
            [((UIButton*)[self.view viewWithTag:(1233+i)]) removeTarget:self action:NULL forControlEvents:UIControlEventTouchUpInside];
            [ ((UIButton*)[self.view viewWithTag:(1233+i)]) addTarget:self action:@selector(tableDetailView:) forControlEvents:UIControlEventTouchUpInside];
        }
        else
        {
            tableName.backgroundColor=[UIColor whiteColor];
            [((UIButton*)[self.view viewWithTag:(1233+i)]) removeTarget:self action:NULL forControlEvents:UIControlEventTouchUpInside];
            [ ((UIButton*)[self.view viewWithTag:(1233+i)]) addTarget:self action:@selector(assignTK:) forControlEvents:UIControlEventTouchUpInside];
        }
       
       
        //[cell.contentView addSubview:tableName];
        // [add addTarget:self action:@selector(tableDetailView:) forControlEvents:UIControlEventTouchUpInside];
        // [cell.contentView addSubview:add];
      
        
    }
     //[self.view setNeedsDisplay];
    
}



-(void)addTabledataImage:(UITableViewCell*)cell indexRow:(int)rowIndex
{
    if ([TableStatus count] == 0){
        [self getTableStatusView];
    }
    CGRect frame=CGRectMake(0,10, 103,100);
    int i=0;
    totalData=rowIndex*5;
    for( ;totalData<[TotalTableNo intValue];totalData++)
    {
        //DLog(@"%d",totalData);
        if(i<5)
        {
            UIButton *add=[UIButton buttonWithType:UIButtonTypeCustom];
            add.tag=totalData;
            frame.origin.x=(frame.size.width+32)*i;
            add.frame=frame;
            UILabel *tableName=[[UILabel alloc]init];
            tableName.tag = totalData + 1000;
            tableName.frame=frame;
            if([TableStatus[totalData]isEqualToString:@"0"])
            {
                tableName.backgroundColor=[UIColor whiteColor];
            }
            else if([TableStatus[totalData]isEqualToString:@"1"])
            {
                tableName.backgroundColor=[UIColor orangeColor];
            }
            tableName.layer.cornerRadius=10.0;
            tableName.text=[NSString stringWithFormat:@"%d",totalData+1];
            tableName.textAlignment=UITextAlignmentCenter;
            tableName.font=[UIFont boldSystemFontOfSize:25];
            [cell.contentView addSubview:tableName];
            [add addTarget:self action:@selector(tableDetailView:) forControlEvents:UIControlEventTouchUpInside];
            [cell.contentView addSubview:add];
            cell.contentView.contentMode=UIViewContentModeCenter;
            i++;
        }
        else 
        {
            break;
        }
    }
    
}

-(int)totalrows
{
    int total=[TotalTableNo intValue];
    int que=total/5;
    int rem=total%5;
    if(rem>0)
    {
        return que+1;
    }
    else 
    {
        return que;
    }
}



#pragma mark Table view methods

-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}

-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    int total=30;//[TotalTableNo intValue];
    int que=total/5;
    int rem=total%5;
    if(rem>0)
    {
        return que+1;
    }
    else 
    {
        return que;
    }
}

-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    
    NSString *CellIdentifier = [NSString stringWithFormat:@"cell %@",indexPath ];
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];  
    if (cell == nil) 
    {
        cell = [[UITableViewCell alloc] initWithFrame:CGRectZero ];
    }
    [self addTabledataImage:cell indexRow:indexPath.row];
    return cell;
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 130;
}

- (IBAction)ViewReport:(id)sender
{
    taskType=4;
    [self showIndicator];
}

-(IBAction)takeAway:(id)sender
{
	taskType=3;
    [self showIndicator];
}



-(IBAction)gotoDishViewMode
{
    [ShareableData sharedInstance].ViewMode=1;
    [ShareableData sharedInstance].isLogin=@"0";
    //taskType=2;
    
    if([[ShareableData sharedInstance].assignedTable1 isEqualToString:@"-1"]&&[[ShareableData sharedInstance].assignedTable2 isEqualToString:@"-1"]&&[[ShareableData sharedInstance].assignedTable3 isEqualToString:@"-1"]&&[[ShareableData sharedInstance].assignedTable4 isEqualToString:@"-1"])
    {
        [ShareableData sharedInstance].isTakeaway=@"1";
        [ShareableData sharedInstance].AddItemFromTakeaway=@"1";
        
    }
    
    // [self showIndicator];
    if([[ShareableData sharedInstance].isConfromHomePage isEqualToString:@"1"])
    {
        NSLog(@"in if");
        //[self dismissModalViewControllerAnimated:NO];
        @autoreleasepool {
            
      //  TabSquareMenuController *mainMenu=[[TabSquareMenuController alloc]initWithNibName:@"TabSquareMenuController" bundle:nil];
       // [self presentModalViewController:mainMenu animated:YES];
           // [self presentViewController:mainMenu animated:YES completion:Nil];
            [self.navigationController pushViewController:TableMgmt animated:YES];
        }
        
    }
    else
    {
        NSLog(@"in else");
        @autoreleasepool {
            
            
        //[self dismissModalViewControllerAnimated:NO];
      //  TabSquareHomeController *home=[[TabSquareHomeController alloc]initWithNibName:@"TabSquareHomeController" bundle:nil];
       // [self presentModalViewController:home animated:YES];
           // [self presentViewController:home animated:YES completion:Nil];
            [self.navigationController pushViewController:homeView animated:YES];
        }
        
    }
}

-(IBAction)gotoDishMenuLIst2
{
    taskType=2;
    
    if([[ShareableData sharedInstance].assignedTable1 isEqualToString:@"-1"]&&[[ShareableData sharedInstance].assignedTable2 isEqualToString:@"-1"]&&[[ShareableData sharedInstance].assignedTable3 isEqualToString:@"-1"]&&[[ShareableData sharedInstance].assignedTable4 isEqualToString:@"-1"])
    {
        [ShareableData sharedInstance].isTakeaway=@"1";
        [ShareableData sharedInstance].AddItemFromTakeaway=@"1";
    }
    
    // [self showIndicator];
    if([[ShareableData sharedInstance].isConfromHomePage isEqualToString:@"1"])
    {
         @autoreleasepool {
        //[self dismissModalViewControllerAnimated:NO];
             //TabSquareMenuController *mainMenu=[[TabSquareMenuController alloc]initWithNibName:@"TabSquareMenuController" bundle:nil];
             // [self presentModalViewController:mainMenu animated:YES];
            // [self presentViewController:mainMenu animated:YES completion:Nil];
             //self pres
             [self.navigationController pushViewController:TableMgmt animated:YES];
         }
    }
    else
    {
         @autoreleasepool {
        //[self dismissModalViewControllerAnimated:NO];
             //[self dismissModalViewControllerAnimated:NO];
            // TabSquareHomeController *home=[[TabSquareHomeController alloc]initWithNibName:@"TabSquareHomeController" bundle:nil];
             // [self presentModalViewController:home animated:YES];
            // [self presentViewController:home animated:YES completion:Nil];
             //self dism
             [self.navigationController pushViewController:homeView animated:YES];
         }
    }
}


-(IBAction)gotoDishMenuLIst:(id)sender
{
    taskType=2;
    
    if([[ShareableData sharedInstance].assignedTable1 isEqualToString:@"-1"]&&[[ShareableData sharedInstance].assignedTable2 isEqualToString:@"-1"]&&[[ShareableData sharedInstance].assignedTable3 isEqualToString:@"-1"]&&[[ShareableData sharedInstance].assignedTable4 isEqualToString:@"-1"])
    {
    [ShareableData sharedInstance].isTakeaway=@"1";
    [ShareableData sharedInstance].AddItemFromTakeaway=@"1";
    }
    
    // [self showIndicator];
    if([[ShareableData sharedInstance].isConfromHomePage isEqualToString:@"1"])
    {
         @autoreleasepool {
             //[self dismissModalViewControllerAnimated:NO];
            // TabSquareMenuController *mainMenu=[[TabSquareMenuController alloc]initWithNibName:@"TabSquareMenuController" bundle:nil];
             // [self presentModalViewController:mainMenu animated:YES];
            // [self presentViewController:mainMenu animated:YES completion:Nil];
             //self pres
             [self.navigationController pushViewController:TableMgmt animated:YES];
         }
    }
    else 
    {
         @autoreleasepool {
             //[self dismissModalViewControllerAnimated:NO];
             //[self dismissModalViewControllerAnimated:NO];
           //  TabSquareHomeController *home=[[TabSquareHomeController alloc]initWithNibName:@"TabSquareHomeController" bundle:nil];
             // [self presentModalViewController:home animated:YES];
           //  [self presentViewController:home animated:YES completion:Nil];
             //self dism
             [self.navigationController pushViewController:homeView animated:YES];
         }
    }   
}

-(void) showIndicator
{if(taskType ==1 || taskType ==4){
    [self myTask];
       }else{
           UIView *progressView = [[UIView alloc]initWithFrame:CGRectMake(0,187, self.view.frame.size.width, self.view.frame.size.height)];
           progressHud= [[MBProgressHUD alloc] initWithView:progressView];
           [self.view addSubview:progressHud];
           [self.view bringSubviewToFront:progressHud];
           //progressHud.dimBackground = YES;
           progressHud.delegate = self;
           //progressHud.labelText = @"loading....";
           
           [progressHud showWhileExecuting:@selector(myTask) onTarget:self withObject:nil animated:YES];

       
    }
    //
}
- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex
{
    NSString *title = [alertView buttonTitleAtIndex:buttonIndex];
    
    // UITextField *guests = [alertView textFieldAtIndex:0];
    
    if ([title isEqualToString:@"Assign"]){
        [[ShareableData sharedInstance].OrderItemID removeAllObjects];
        [[ShareableData sharedInstance].OrderItemName removeAllObjects];
        [[ShareableData sharedInstance].OrderItemQuantity removeAllObjects];
        [[ShareableData sharedInstance].OrderItemRate removeAllObjects];
        
        [[ShareableData sharedInstance].OrderSpecialRequest removeAllObjects];
        [[ShareableData sharedInstance].OrderCatId removeAllObjects];
        //[[ShareableData sharedInstance].OrderBeverageContainerId removeAllObjects];
        [[ShareableData sharedInstance].OrderCustomizationDetail removeAllObjects];
        [[ShareableData sharedInstance].confirmOrder removeAllObjects];
        [[ShareableData sharedInstance].IsOrderCustomization removeAllObjects];
        UITextField *guests = [alertView textFieldAtIndex:0];
        if (guests.text.intValue >0 ){
            [[ShareableData sharedInstance].IsEditOrder isEqualToString:@"0"];
            [self AssignData:guests.text];
            
            //[self presentModalViewController:homeView animated:YES];
            // [self presentViewController:homeView animated:YES completion:Nil];
            [self.navigationController pushViewController:homeView animated:YES];
        }
        
    }
    if ([title isEqualToString:@"Change Cover"]){
        [self getSalesNumber:tableNumber];
        UITextField *guests = [alertView textFieldAtIndex:0];
        NSMutableURLRequest *request = [[NSMutableURLRequest alloc] init];
        
        [request setURL:[NSURL URLWithString:[NSString stringWithFormat:@"http://54.251.56.111/Raptor/ChangeCover.php?POSID=POS002&OperatorNo=1&TableNo=%@&SalesNo=%@&SplitNo=0&NewCover=%@",tableNumber, [ShareableData sharedInstance].salesNo,guests.text]]];
        
        NSError *error;
        NSURLResponse *response;
        NSData *uData=[NSURLConnection sendSynchronousRequest:request returningResponse:&response error:&error];
        
        NSDictionary* json = [NSJSONSerialization JSONObjectWithData:uData options:kNilOptions error:&error];
        
        
        // if ([json count]!=0){
        NSArray* returnVal = [json objectForKey:@"returnVal"];
        
        // for (int i=0;i<[returnedNodes count];i++){
        NSDictionary* node = [returnVal objectAtIndex:0];
        if (![[node objectForKey:@"ErrCode"] isEqualToString:@"01"]){
            
            UIAlertView *alert = [[UIAlertView alloc] initWithTitle:nil message:[node objectForKey:@"ErrMsg"]                                                         delegate:self cancelButtonTitle:@"Cancel" otherButtonTitles:nil, nil];
            
            [alert show];
            
        }else{
            UIAlertView *alert = [[UIAlertView alloc] initWithTitle:nil message:@"Cover Change Successfull"                                  delegate:self cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            
            [alert show];
            
        }
        
        
    }
    if ([title isEqualToString:@"View table order details"]){
        tablestatusView.tableNumber=tableNumber;
        
        [self.navigationController pushViewController:tablestatusView animated:YES];
    }
    if ([title isEqualToString:@"Reassign iPad to this table"]){
        [ShareableData sharedInstance].AddItemFromTakeaway=@"0";
        
        [[ShareableData sharedInstance].OrderItemID removeAllObjects];
        [[ShareableData sharedInstance].OrderItemName removeAllObjects];
        [[ShareableData sharedInstance].OrderItemQuantity removeAllObjects];
        [[ShareableData sharedInstance].OrderItemRate removeAllObjects];
        
        [[ShareableData sharedInstance].OrderSpecialRequest removeAllObjects];
        [[ShareableData sharedInstance].OrderCatId removeAllObjects];
        //[[ShareableData sharedInstance].OrderBeverageContainerId removeAllObjects];
        [[ShareableData sharedInstance].OrderCustomizationDetail removeAllObjects];
        [[ShareableData sharedInstance].confirmOrder removeAllObjects];
        [[ShareableData sharedInstance].IsOrderCustomization removeAllObjects];
        
        // taskType=0;
        
        
        //lblTableNumber.text=tableNumber;
        
        // v1.layer.cornerRadius=12.0;
        
        // [self roundLabelCorner];
        
        [super viewDidLoad];
        // lblTableNumber.text=tableNumber;
        //[self getTaxesList];
        // Do any additional setup after loading the view from its nib.
        // [self getCustomerDetails:tableNumber];
        //lblTableNumber.text=tableNumber;
        [self getTableDetails:tableNumber]; //Change
        [self gotoDishMenuLIst2];
        
        
    }
    if ([title isEqualToString:@"Switch table"]){
        
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:nil message:@"Please tap on empty table to assign."
                                                       delegate:self cancelButtonTitle:@"Cancel" otherButtonTitles:@"Choose Table", nil];
        
        [alert show];
        
    }
    if ([title isEqualToString:@"Change Pax"]){
        
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:nil message:@"Please enter no. of Pax"
                                                       delegate:self cancelButtonTitle:@"Cancel" otherButtonTitles:@"Change Cover", nil];
        alert.alertViewStyle = UIAlertViewStylePlainTextInput;
        UITextField * alertTextField = [alert textFieldAtIndex:0];
        alertTextField.keyboardType = UIKeyboardTypeNumberPad;
        
        [alert show];
        
    }
    
    if ([title isEqualToString:@"Choose Table"]){
        
        oldTableNumber = [tableNumber copy];
        
        switchMode = 1;
    }
    if ([title isEqualToString:@"Confirm"]){
        switchMode = 0;
        NSMutableURLRequest *request = [[NSMutableURLRequest alloc] init];
        [request setURL:[NSURL URLWithString:[NSString stringWithFormat:@"http://54.251.99.174/kinaraEx/changeTable.php?newtableid=%@&oldtableid=%@",tableNumber,oldTableNumber]]];
        
        NSError *error;
        NSURLResponse *response;
        NSData *uData=[NSURLConnection sendSynchronousRequest:request returningResponse:&response error:&error];
    }
    if ([title isEqualToString:@"Cancel"]){
        switchMode = 0;
        
        
    }
    
    
    
}
 /*   -(void)createHomeView{
        homeView=[[TabSquareHomeController alloc]initWithNibName:@"TabSquareHomeController" bundle:nil];
    }*/
-(void)getBillNumber:(NSString*)SearchTableNumber
{
    NSString *post =[NSString stringWithFormat:@"table_id=%@&key=%@",SearchTableNumber, [ShareableData appKey]];
    NSData *postData = [post dataUsingEncoding:NSUTF8StringEncoding allowLossyConversion:YES];
    
    NSString *postLength = [NSString stringWithFormat:@"%d", [postData length]];
    NSMutableURLRequest *request = [[NSMutableURLRequest alloc] init];
    
    NSString *url_string = [NSString stringWithFormat:@"%@/webs/get_temp_order_id", [ShareableData serverURL]];
    [request setURL:[NSURL URLWithString:url_string]];
    
    [request setHTTPMethod:@"POST"];
    [request setValue:postLength forHTTPHeaderField:@"Content-Length"];
    [request setValue:@"application/x-www-form-urlencoded" forHTTPHeaderField:@"Content-Type"];
    [request setValue:@"application/x-www-form-urlencoded charset=utf-8" forHTTPHeaderField:@"Content-Type"];
    [request setHTTPBody:postData];
    
    NSError *error;
    NSURLResponse *response;
    NSData *uData=[NSURLConnection sendSynchronousRequest:request returningResponse:&response error:&error];
    NSString *data=[[NSString alloc]initWithData:uData encoding:NSUTF8StringEncoding];
    
    [ShareableData sharedInstance].OrderId=data;
    DLog(@"Bill Number :%@",data);
    //[self getSalesNumber:SearchTableNumber];
    
    
}
-(void)getSalesNumber:(NSString*)SearchTableNumber
{
    NSString *post =[NSString stringWithFormat:@"table_id=%@&key=%@",SearchTableNumber, [ShareableData appKey]];
    NSData *postData = [post dataUsingEncoding:NSUTF8StringEncoding allowLossyConversion:YES];
    
    NSString *postLength = [NSString stringWithFormat:@"%d", [postData length]];
    NSMutableURLRequest *request = [[NSMutableURLRequest alloc] init];
    
    NSString *url_string = [NSString stringWithFormat:@"%@/webs/get_temp_sales_id", [ShareableData serverURL]];
    [request setURL:[NSURL URLWithString:url_string]];
    
    [request setHTTPMethod:@"POST"];
    [request setValue:postLength forHTTPHeaderField:@"Content-Length"];
    [request setValue:@"application/x-www-form-urlencoded" forHTTPHeaderField:@"Content-Type"];
    [request setValue:@"application/x-www-form-urlencoded charset=utf-8" forHTTPHeaderField:@"Content-Type"];
    [request setHTTPBody:postData];
    
    NSError *error;
    NSURLResponse *response;
    NSData *uData=[NSURLConnection sendSynchronousRequest:request returningResponse:&response error:&error];
    NSString *data=[[NSString alloc]initWithData:uData encoding:NSUTF8StringEncoding];
    
    [ShareableData sharedInstance].salesNo=data;
    [ShareableData sharedInstance].splitNo = @"0";
    DLog(@"Bill Number :%@",data);
    
}


-(void)getTableDetails:(NSString*)SearchTableNumber
{
    DLog(@"Table Number : %@",SearchTableNumber);
    
    [self getBillNumber:SearchTableNumber];
    
    [ShareableData sharedInstance].assignedTable1=SearchTableNumber;
    
    [[ShareableData sharedInstance].DishId removeAllObjects];
    [[ShareableData sharedInstance].DishName removeAllObjects];
    [[ShareableData sharedInstance].DishQuantity removeAllObjects];
    [[ShareableData sharedInstance].DishRate removeAllObjects];
    [[ShareableData sharedInstance].TempOrderID removeAllObjects];
    
    [[ShareableData sharedInstance].TDishName removeAllObjects];
    [[ShareableData sharedInstance].TDishQuantity removeAllObjects];
    [[ShareableData sharedInstance].TDishRate removeAllObjects];
    [[ShareableData sharedInstance].OrderItemID removeAllObjects];
    [[ShareableData sharedInstance].OrderItemName removeAllObjects];
    [[ShareableData sharedInstance].OrderItemQuantity removeAllObjects];
    [[ShareableData sharedInstance].OrderItemRate removeAllObjects];
    
    [[ShareableData sharedInstance].OrderSpecialRequest removeAllObjects];
    [[ShareableData sharedInstance].OrderCatId removeAllObjects];
    [[ShareableData sharedInstance].OrderBeverageContainerId removeAllObjects];
    [[ShareableData sharedInstance].OrderCustomizationDetail removeAllObjects];
    [[ShareableData sharedInstance].confirmOrder removeAllObjects];
    [[ShareableData sharedInstance].IsOrderCustomization removeAllObjects];
    
    NSString *post =[NSString stringWithFormat:@"table_id=%@&key=%@",SearchTableNumber, [ShareableData appKey]];
    NSData *postData = [post dataUsingEncoding:NSUTF8StringEncoding allowLossyConversion:YES];
    
    NSString *postLength = [NSString stringWithFormat:@"%d", [postData length]];
    NSMutableURLRequest *request = [[NSMutableURLRequest alloc] init];
    
    NSString *url_string = [NSString stringWithFormat:@"%@/webs/get_temp_order", [ShareableData serverURL]];
    [request setURL:[NSURL URLWithString:url_string]];
    
    [request setHTTPMethod:@"POST"];
    [request setValue:postLength forHTTPHeaderField:@"Content-Length"];
    [request setValue:@"application/x-www-form-urlencoded" forHTTPHeaderField:@"Content-Type"];
    [request setValue:@"application/x-www-form-urlencoded charset=utf-8" forHTTPHeaderField:@"Content-Type"];
    [request setHTTPBody:postData];
    
    NSError *error;
    NSURLResponse *response;
    NSData *uData=[NSURLConnection sendSynchronousRequest:request returningResponse:&response error:&error];
    NSString *data=[[NSString alloc]initWithData:uData encoding:NSUTF8StringEncoding];
    // DLog(@"Data :%@",data);
    
    SBJSON *parser = [[SBJSON alloc] init];
    NSMutableArray *resultFromPost = [parser objectWithString:data error:nil];
    DLog(@"Data from GetTable :%@",resultFromPost);
    
    
    for(int i=0;i<[resultFromPost count];i++)
    {
        NSMutableDictionary *dataitem=resultFromPost[i];
        
        [[ShareableData sharedInstance].DishId addObject:[NSString stringWithFormat:@"%@",dataitem[@"dish_id"]]];
        [[ShareableData sharedInstance].DishName addObject:[NSString stringWithFormat:@"%@",dataitem[@"dish_name"]]];
        [[ShareableData sharedInstance].DishQuantity addObject:[NSString stringWithFormat:@"%@",dataitem[@"quantity"]]];
        [[ShareableData sharedInstance].TempOrderID addObject:[NSString stringWithFormat:@"%@",dataitem[@"id"]]];
        
        //        NSString *quantity=[NSString stringWithFormat:@"%@",dataitem[@"quantity"]];
        //        int qquantity=[quantity intValue];
        //        NSString *price=[NSString stringWithFormat:@"%@",dataitem[@"price"]];
        //        float fprice=[price floatValue]/qquantity;
        
        [[ShareableData sharedInstance].DishRate addObject:dataitem[@"price"]];
        //[[ShareableData sharedInstance].DishRate addObject:[NSString stringWithFormat:@"%@",[dataitem objectForKey:@"price"]]];
        
        [[ShareableData sharedInstance].OrderItemID addObject:[NSString stringWithFormat:@"%@",dataitem[@"dish_id"]]];
        [[ShareableData sharedInstance].OrderItemName addObject:[NSString stringWithFormat:@"%@",dataitem[@"dish_name"]]];
        [[ShareableData sharedInstance].OrderItemQuantity addObject:[NSString stringWithFormat:@"%@",dataitem[@"quantity"]]];
        [[ShareableData sharedInstance].OrderItemRate addObject:[NSString stringWithFormat:@"%@",dataitem[@"price"]]];
        
        [[ShareableData sharedInstance].confirmOrder addObject:[NSString stringWithFormat:@"%@",dataitem[@"1"]]];
        
        
        
        [[ShareableData sharedInstance].IsOrderCustomization addObject:[NSString stringWithFormat:@"%@",dataitem[@"is_order_customisation"]]];
        
        //[[ShareableData sharedInstance].IsOrderCustomization addObject:[NSString stringWithFormat:@"%@",[dataitem objectForKey:@"is_order_customisation"]]];
        
        NSString *trimmedString = [[NSString stringWithFormat:@"%@",dataitem[@"order_cat_id"]] stringByTrimmingCharactersInSet:
                                   [NSCharacterSet whitespaceAndNewlineCharacterSet]];
        
        [[ShareableData sharedInstance].OrderCatId addObject:trimmedString];
        [[ShareableData sharedInstance].OrderSpecialRequest addObject:[NSString stringWithFormat:@"%@",dataitem[@"order_special_request"]]];
        NSString *orderId = dataitem[@"dish_id"];
        if ([dataitem[@"is_order_customisation"] isEqualToString:@"1"]){
            NSMutableArray *tempCust= [[NSMutableArray alloc]init];
            
            DLog(@"WTF1: %@",tempCust);
            if([trimmedString isEqualToString:@"8"])
            {
                // [[TabSquareDBFile sharedDatabase] openDatabaseConnection];
                NSString *temp=[[TabSquareDBFile sharedDatabase]getBeverageId:orderId];
                // [[TabSquareDBFile sharedDatabase] closeDatabaseConnection];
                if (temp.intValue != 0){
                    orderId = [temp copy];
                }
            }
            
            
            //  [[TabSquareDBFile sharedDatabase] openDatabaseConnection];
            NSMutableArray *resultFromPostt=[[TabSquareDBFile sharedDatabase]getDishDataDetail:[NSString stringWithFormat:@"%@",orderId]];
            NSMutableDictionary *dataitm2 = resultFromPostt[0];
            //DLog(@"Data FOr Dish :%@",resultFromPostt);
            [tempCust addObject:dataitm2[@"customisations"]];
            //  [[TabSquareDBFile sharedDatabase] closeDatabaseConnection];
            NSMutableURLRequest *request = [[NSMutableURLRequest alloc] init];
            [request setURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@Ex/getOptions.php?tempid=%@&key=%@", [ShareableData serverURL],dataitem[@"id"], [ShareableData appKey] ]]];
            
            NSError *error;
            NSURLResponse *response;
            NSData *uData=[NSURLConnection sendSynchronousRequest:request returningResponse:&response error:&error];
            NSString *data=[[NSString alloc]initWithData:uData encoding:NSUTF8StringEncoding];
            NSArray *stringArray = [data componentsSeparatedByString: @","];
            for (int u=0;u<[tempCust count];u++){
                for (int y=0;y<[tempCust[u] count];y++){
                    NSMutableDictionary *dataitem3=tempCust[u][y];
                    NSMutableArray *Option=dataitem3[@"Option"];
                    for (int j=0;j<([stringArray count]/2);j++){
                        for(int k=0;k<[Option count];k++)
                        {
                            NSMutableDictionary *optionDic=Option[k];
                            NSString *optionid=optionDic[@"id"];
                            if ([optionid isEqualToString:stringArray[j]]){
                                
                                Option[k][@"quantity"] = stringArray[j+1];
                            }
                            
                        }
                    }
                }
            }
            [[ShareableData sharedInstance].OrderCustomizationDetail addObject:[self getSelectedCustomization:tempCust]];
            DLog(@"WTF: %@",tempCust);
        }else{
            [[ShareableData sharedInstance].OrderCustomizationDetail addObject:[NSString stringWithFormat:@"%@",dataitem[@"order_customisation_detail"]]];
        }
        
        
        
        
        
        DLog(@"dish_id = %@",dataitem[@"dish_id"]);
        DLog(@"dish_name = %@",dataitem[@"dish_name"]);
        DLog(@"quantity = %@",dataitem[@"quantity"]);
        DLog(@"price = %@",dataitem[@"price"]);
        
        DLog(@"order_special_request = %@",dataitem[@"order_special_request"]);
        DLog(@"order_customisation_detail = %@",dataitem[@"order_customisation_detail"]);
        // DLog(@"order_beverage_container_id = %@",[dataitem objectForKey:@"order_beverage_container_id"]);
        DLog(@"order_cat_id = %@",dataitem[@"order_cat_id"]);
        DLog(@"confirm_order = %@",dataitem[@"confirm_order"]);
        DLog(@"is_order_customisation = %@",dataitem[@"is_order_customisation"]);
        
        [[ShareableData sharedInstance].TDishName addObject:[NSString stringWithFormat:@"%@",dataitem[@"dish_name"]]];
        [[ShareableData sharedInstance].TDishQuantity addObject:[NSString stringWithFormat:@"%@",dataitem[@"quantity"]]];
        [[ShareableData sharedInstance].TDishRate addObject:[NSString stringWithFormat:@"%@",dataitem[@"price"]]];
    }
    
    //[ReportSummaryTable reloadData];
}

-(NSMutableArray*)getSelectedCustomization:(NSMutableArray*)DishC
{
    NSMutableArray *customizationDetail=[[NSMutableArray alloc]init];
    for(int i=0;i<[DishC count];++i)
    {
        NSMutableDictionary *dataitem=DishC[i][0];
        NSMutableDictionary *customizations=dataitem[@"Customisation"];
        NSMutableArray *Option=dataitem[@"Option"];
        NSMutableArray *optionData=[[NSMutableArray alloc]init];
        for(int j=0;j<[Option count];++j)
        {
            NSMutableDictionary *optionDic=Option[j];
            NSString *quantity=optionDic[@"quantity"];
            if([quantity intValue]>=1)
            {
                [optionData addObject:optionDic];
            }
        }
        if([optionData count]!=0)
        {
            NSMutableDictionary *cust=[NSMutableDictionary dictionary];
            cust[@"Customisation"] = customizations;
            cust[@"Option"] = optionData;
            [customizationDetail addObject:cust];
        }
        
    }
    return customizationDetail;
    //DLog(@"%@",[[ShareableData sharedInstance]OrderCustomizationDetail]);
}


-(void)AssignData:(NSString*)guests{
    [ShareableData sharedInstance].ViewMode = 2;
    [[ShareableData sharedInstance].IsEditOrder isEqualToString:@"0"];
    [ShareableData sharedInstance].assignedTable1=tableNumber;
    [ShareableData sharedInstance].assignedTable2=@"-1";
    [ShareableData sharedInstance].assignedTable3=@"-1";
    [ShareableData sharedInstance].assignedTable4=@"-1";
   // [self assignTableRaptor:guests ];
        NSString *post =[NSString stringWithFormat:@"table1=%@&table2=%@&table3=%@&table4=%@&ipad_id=%@&no_of_guests=%@&key=%@",tableNumber,@"-1",@"-1",@"-1",@"0",guests, [ShareableData appKey]];
        NSData *postData = [post dataUsingEncoding:NSUTF8StringEncoding allowLossyConversion:YES];
    
        NSString *postLength = [NSString stringWithFormat:@"%d", [postData length]];
        
        NSMutableURLRequest *request = [[NSMutableURLRequest alloc] init];
    
        NSString *url_string = [NSString stringWithFormat:@"%@/webs/set_order", [ShareableData serverURL]];
        [request setURL:[NSURL URLWithString:url_string]];
        
        [request setHTTPMethod:@"POST"];
        [request setValue:postLength forHTTPHeaderField:@"Content-Length"];
        [request setValue:@"application/x-www-form-urlencoded" forHTTPHeaderField:@"Content-Type"];
        [request setValue:@"application/x-www-form-urlencoded charset=utf-8" forHTTPHeaderField:@"Content-Type"];
        [request setHTTPBody:postData];
        NSError *error;
        NSURLResponse *response;
        NSData *uData=[NSURLConnection sendSynchronousRequest:request returningResponse:&response error:&error];
        NSString *data=[[NSString alloc]initWithData:uData encoding:NSUTF8StringEncoding];
        [ShareableData sharedInstance].OrderId=data;
    
    
    
        //DLog(@"%@",data);
    }
-(NSArray*)assignTableRaptor:(NSString*)user {
    NSArray* returnVal;
    
        NSMutableURLRequest *request = [[NSMutableURLRequest alloc] init];
        [request setURL:[NSURL URLWithString:[NSString stringWithFormat:@"http://54.251.56.111/Raptor/OpenTable.php?POSID=%@&OperatorNo=%@&TableNo=%@&CustFirstName=%@&CustLastName=%@&CustAddress=%@&CustRemark=%@&OrderRemark=%@&Cover=%@",@"POS001",@"1",tableNumber,@"",@"",@"",@"",@"",user]]];
        NSError *error;
        NSURLResponse *response;
        NSData *uData=[NSURLConnection sendSynchronousRequest:request returningResponse:&response error:&error];
        //  NSString *data=[[NSString alloc]initWithData:uData encoding:NSUTF8StringEncoding];
        NSDictionary* json = [NSJSONSerialization JSONObjectWithData:uData options:kNilOptions error:&error];
        NSLog(@"json = %@",json);
        
        if ([json count]!=0){
            returnVal = [json objectForKey:@"returnVal"];
        }
   // for (int i=0;i<[returnedNodes count];i++){
        NSDictionary* node = [returnVal objectAtIndex:0];
    [ShareableData sharedInstance].salesNo= [node objectForKey:@"SalesNo"];
     [ShareableData sharedInstance].splitNo= [node objectForKey:@"SplitNo"];
         //  }
   // [self holdTableRaptor:tableNumber];
  
    return returnVal;
    
}
-(NSArray*)holdTableRaptor:(NSString*)table{
    NSArray* returnVal;
    
    NSMutableURLRequest *request = [[NSMutableURLRequest alloc] init];
    [request setURL:[NSURL URLWithString:[NSString stringWithFormat:@"http://54.251.56.111/Raptor/HoldTable.php?POSID=%@&OperatorNo=%@&TableNo=%@&SalesNo=%@&SplitNo=%@",@"POS001",@"1",table,[ShareableData sharedInstance].salesNo,[ShareableData sharedInstance].splitNo]]];
    NSError *error;
    NSURLResponse *response;
    NSData *uData=[NSURLConnection sendSynchronousRequest:request returningResponse:&response error:&error];
    //  NSString *data=[[NSString alloc]initWithData:uData encoding:NSUTF8StringEncoding];
    NSDictionary* json = [NSJSONSerialization JSONObjectWithData:uData options:kNilOptions error:&error];
    NSLog(@"json = %@",json);
    
    if ([json count]!=0){
        returnVal = [json objectForKey:@"returnVal"];
    }
    // for (int i=0;i<[returnedNodes count];i++){
   
    //  }
    
    return returnVal;
    
}



- (void)myTask
{
    [self getBackgroundImage];
    
    if(taskType==1)
    {
        int tag=[tableNumber intValue]-1;
        if (tag>=1233){
            
            tablestatusView.tableNumber=[NSString stringWithFormat:@"%d",tag+1];
            // [self presentModalViewController:tablestatusView animated:YES];
            //[self.navigationController pushViewController:tablestatusView animated:YES];
            // [self presentViewController:tablestatusView animated:YES completion:Nil];
            [self.navigationController pushViewController:tablestatusView animated:YES];
        }else{
            if([TableStatus[tag]isEqualToString:@"0"])
            { if (switchMode == 0){
                [[ShareableData sharedInstance].OrderItemID removeAllObjects];
                [[ShareableData sharedInstance].OrderItemName removeAllObjects];
                [[ShareableData sharedInstance].OrderItemQuantity removeAllObjects];
                [[ShareableData sharedInstance].OrderItemRate removeAllObjects];
                [[ShareableData sharedInstance].OrderSpecialRequest removeAllObjects];
                [[ShareableData sharedInstance].OrderCustomizationDetail removeAllObjects];
                [[ShareableData sharedInstance].OrderCatId removeAllObjects];
                [[ShareableData sharedInstance].confirmOrder removeAllObjects];
                [[ShareableData sharedInstance].IsOrderCustomization removeAllObjects];
                [[ShareableData sharedInstance].TempOrderID removeAllObjects];
                UIAlertView *alert = [[UIAlertView alloc] initWithTitle:nil message:@"Enter no. of Guests:"
                                                               delegate:self cancelButtonTitle:@"Cancel" otherButtonTitles:@"Assign", nil];
                alert.alertViewStyle = UIAlertViewStylePlainTextInput;
                UITextField * alertTextField = [alert textFieldAtIndex:0];
                alertTextField.keyboardType = UIKeyboardTypeNumberPad;
                [alert show];
                // [self presentModalViewController:assignTableView animated:YES];
            }else{
                
                UIAlertView *alert = [[UIAlertView alloc] initWithTitle:nil message:@"Confirm switch to this table?"
                                                               delegate:self cancelButtonTitle:@"Cancel" otherButtonTitles:@"No",@"Confirm", nil];
                
                [alert show];
                
                
            }
            }
            else
            {
                if (switchMode == 0){
                    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:nil message:@"Go To:"
                                                                   delegate:self cancelButtonTitle:@"Cancel" otherButtonTitles:@"Reassign iPad to this table",@"View table order details",@"Switch table",@"Change Pax", nil];
                    
                    [alert show];
                }else{
                    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:nil message:@"You cannot switch a table to another occupied table."
                                                                   delegate:self cancelButtonTitle:@"Choose Again" otherButtonTitles: nil];
                    
                    [alert show];
                }
                
                // [ShareableData sharedInstance].isTakeaway=@"1";
                
                
                //  [self presentViewController:tablestatusView animated:YES completion:nil];
            }
        }
    }
    else if(taskType==2)
    {
        
    }
    else if(taskType==3)
    {
        // TakeWayEditOrder *taEdit=[[TakeWayEditOrder alloc]initWithNibName:@"TakeWayEditOrder" bundle:nil];
        [ShareableData sharedInstance].isTakeaway=@"1";
        //[self presentModalViewController:SalesReport1 animated:YES];
        //  [self.navigationController pushViewController:SalesReport1 animated:YES];
        //  [self presentViewController:SalesReport1 animated:YES completion:Nil];
        //  [self.navigationController pushViewController:taEdit animated:YES];
    }
    else if(taskType==4)
    {
        //[self dismissModalViewControllerAnimated:NO];
        // SalesReport *SalesReport1=[[SalesReport alloc]initWithNibName:@"SalesReport" bundle:nil];
        // [self presentModalViewController:SalesReport1 animated:YES];
        //[self.navigationController pushViewController:SalesReport1 animated:YES];
        //  [self presentViewController:SalesReport1 animated:YES completion:Nil];
        [self.navigationController pushViewController:SalesReport1 animated:YES];
    }
    else
    {
        [self getTotalNumberofTable];
        [self getFreeTableNo];
        [self getTableStatusView];
        //[self getTaxesList];
        [tableNoView reloadData];
        // [tableStatusView reloadData];
    }
    
}


-(IBAction)infoButton:(id)sender
{
    NSString *img_name = [NSString stringWithFormat:@"%@%@_%@.png", PRE_NAME, PLANOGRAM_IMAGE, [ShareableData appKey]];
    UIImage *img = [[TabSquareDBFile sharedDatabase] getImage:img_name];
    
    if(img == nil || img == NULL) {
        NSMutableArray *arr = [[NSMutableArray alloc] init];
        [arr addObject:PLANOGRAM_IMAGE];
        
        [[TabSquareDBFile sharedDatabase] updateUIImages:arr];
        
        img = [[TabSquareDBFile sharedDatabase] getImage:img_name];
    }
    
    if(img == nil || img == NULL) {
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"Alert" message:@"Error in loading data." delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil];
        [alert show];
    }
    else {
        TabSquarePlaogramView *planogram = [[TabSquarePlaogramView alloc] initWithFrame:self.view.bounds image:img];
        [self.view addSubview:planogram];
    }
}


-(void)getBackgroundImage
{
    /*
    CGPoint _point = [self.view center];
    CGRect _frm = CGRectMake(_point.x-11, _point.y-12, 25, 25);
    UIActivityIndicatorView *act = [[UIActivityIndicatorView alloc] initWithFrame:_frm];
	[self.view addSubview:act];
	[act startAnimating];
     */

    
    //dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT
                                             //, 0), ^{
        
    NSString *img_name = [NSString stringWithFormat:@"%@%@_%@.png", PRE_NAME, BACKGROUND_IMAGE, [ShareableData appKey]];
        
    UIImage *img = [[TabSquareDBFile sharedDatabase] getImage:img_name];
        
    if(img == nil || img == NULL) {
        NSMutableArray *arr = [[NSMutableArray alloc] init];
        [arr addObject:BACKGROUND_IMAGE];
            
        [[TabSquareDBFile sharedDatabase] updateUIImages:arr];
            
        img = [[TabSquareDBFile sharedDatabase] getImage:img_name];
    }
    
    [self.bgImage setImage:img];
        /*
        
        dispatch_sync(dispatch_get_main_queue(), ^{
            
            [self.bgImage setImage:img];
            [act removeFromSuperview];
        });
         */
        
    //});
    
    
}



@end


